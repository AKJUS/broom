% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list-optim-tidiers.R
\name{tidy_optim}
\alias{tidy_optim}
\alias{optim_tidiers}
\alias{tidy.optim}
\title{Tidying methods for singular value decomposition lists}
\usage{
tidy_optim(x, ...)
}
\arguments{
\item{x}{A list returned from \code{\link[stats:optim]{stats::optim()}}.}

\item{...}{Additional arguments. Not used. Needed to match generic
signature only. \strong{Cautionary note:} Misspelled arguments will be
absorbed in \code{...}, where they will be ignored. If the misspelled
argument has a default value, the default value will be used.
For example, if you pass \code{conf.lvel = 0.9}, all computation will
proceed using \code{conf.level = 0.95}. Additionally, if you pass
\code{newdata = my_tibble} to an \code{\link[=augment]{augment()}} method that does not
accept a \code{newdata} argument, it will use the default value for
the \code{data} argument.}
}
\value{
A \link[tibble:tibble]{tibble::tibble} with one row per parameter estimated by \code{optim}
and columns:

\item{parameter}{name of the parameter, or \code{parameter1},
\code{parameter2}... if the input vector is not named}
\item{value}{parameter value that minimizes or maximizes the output}
}
\description{
These methods tidy the U, D, and V matrices returned by the
\code{\link[=svd]{svd()}} functions into a tidy format. Because \code{svd} returns
lists without classes, this function has to be called by
\code{\link[=tidy.list]{tidy.list()}} when it recognizes a list as an SVD.
}
\examples{

func <- function(x) {
    (x[1] - 2)^2 + (x[2] - 3)^2 + (x[3] - 8)^2
}

o <- optim(c(1, 1, 1), func)

tidy(o)
glance(o)

}
\seealso{
\code{\link[=tidy]{tidy()}}, \code{\link[stats:optim]{stats::optim()}}

Other list tidiers: \code{\link{glance_optim}},
  \code{\link{list_tidiers}}, \code{\link{tidy_irlba}},
  \code{\link{tidy_svd}}, \code{\link{tidy_xyz}}
}
\concept{list tidiers}
